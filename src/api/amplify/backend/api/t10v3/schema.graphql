type PackageMetadata @model @auth(rules: [{allow: public}]) {
  Name: PackageName!
  Version: String!
  ID: PackageID!
}

type PackageData @model @auth(rules: [{allow: public}]) {
  Content: String
  URL: String
  JSProgram: String
}

type User @model @auth(rules: [{allow: public}]) {
  name: String!
  isAdmin: Boolean!
}

type UserAuthenticationInfo @model @auth(rules: [{allow: public}]) {
  password: String!
}

type PackageID @model @auth(rules: [{allow: public}]) {
  value: String!
}

type PackageRating @model @auth(rules: [{allow: public}]) {
  BusFactor: Float!
  Correctness: Float!
  RampUp: Float!
  ResponsiveMaintainer: Float!
  LicenseScore: Float!
  GoodPinningPractice: Float!
  PullRequest: Float!
  NetScore: Float!
}

type PackageHistoryEntry @model @auth(rules: [{allow: public}]) {
  User: User!
  Date: String!
  PackageMetadata: PackageMetadata!
  Action: String!
}

type PackageName @model @auth(rules: [{allow: public}]) {
  value: String!
}

type AuthenticationToken @model @auth(rules: [{allow: public}]) {
  value: String!
}

type AuthenticationRequest @model @auth(rules: [{allow: public}]) {
  User: User!
  Secret: UserAuthenticationInfo!
}

type SemverRange @model @auth(rules: [{allow: public}]) {
  value: String!
}

type PackageQuery @model @auth(rules: [{allow: public}]) {
  Version: SemverRange
  Name: PackageName!
}

type EnumerateOffset @model @auth(rules: [{allow: public}]) {
  value: String!
}

type PackageRegEx @model @auth(rules: [{allow: public}]) {
  RegEx: String!
}
 